# GitHub Actions workflow for Azure App Service deployment
# Builds and deploys Python FastAPI application to Azure Web App

name: Build and deploy Python app to Azure Web App - investimate-backend

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Create and activate virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
          echo "VIRTUAL_ENV=$VIRTUAL_ENV" >> $GITHUB_ENV
          echo "$VIRTUAL_ENV/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r Backend/requirements.txt

      - name: Create frozen requirements for deployment
        run: |
          pip freeze > Backend/requirements_frozen.txt
          echo "Created requirements_frozen.txt with $(wc -l < Backend/requirements_frozen.txt) packages"

      - name: Prepare deployment package
        run: |
          cd Backend
          # Remove any existing deployment artifacts
          rm -f ../release.zip
          
          # Create clean deployment zip with only necessary files
          zip -r ../release.zip . \
            -x "*.pyc" \
            -x "__pycache__/*" \
            -x "*.git*" \
            -x "*.env*" \
            -x "*.log" \
            -x "*.tmp" \
            -x "venv/*" \
            -x "tests/*" \
            -x "docs/*" \
            -x ".pytest_cache/*"
          
          # Verify the zip contents
          echo "Deployment package contents:"
          unzip -l ../release.zip | head -20

      - name: Upload deployment artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: release.zip
          retention-days: 1

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Extract deployment package
        run: |
          # Create a clean directory for deployment
          mkdir -p deployment
          cd deployment
          unzip ../release.zip
          
          # Verify extraction
          echo "Extracted files:"
          ls -la
          
          # Verify critical files exist
          if [ ! -f "startup_linux.sh" ]; then
            echo "❌ startup_linux.sh missing"
            exit 1
          fi
          
          if [ ! -f "application.py" ]; then
            echo "❌ application.py missing"
            exit 1
          fi
          
          if [ ! -f "requirements.txt" ]; then
            echo "❌ requirements.txt missing"
            exit 1
          fi
          
          echo "✅ All critical files present"

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'investimate-backend'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: './deployment'

      - name: Verify deployment
        run: |
          echo "Deployment completed successfully"
          echo "App URL: ${{ steps.deploy-to-webapp.outputs.webapp-url }}"
          
          # Wait for app to start
          sleep 30
          
          # Test the health endpoint
          if curl -f "${{ steps.deploy-to-webapp.outputs.webapp-url }}/health" --max-time 30; then
            echo "✅ Health check passed"
          else
            echo "⚠️ Health check failed - app may still be starting"
          fi






# # Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# # More GitHub Actions for Azure: https://github.com/Azure/actions
# # More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

# name: Build and deploy Python app to Azure Web App - investimate-backend

# on:
#   push:
#     branches:
#       - main
#   workflow_dispatch:

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v4

#       - name: Set up Python version
#         uses: actions/setup-python@v5
#         with:
#           python-version: '3.11'

#       - name: Create and start virtual environment
#         run: |
#           python -m venv venv
#           source venv/bin/activate
      
#       - name: Install dependencies
#         run: |
#           source venv/bin/activate
#           pip install -r Backend/requirements.txt
          
#       - name: Create requirements with versions for deployment
#         run: |
#           source venv/bin/activate
#           pip freeze > Backend/requirements_frozen.txt
          
#       - name: Zip artifact for deployment
#         run: |
#           cd Backend
#           zip -r ../release.zip . --exclude="__pycache__/*" --exclude="*.pyc"
          
#       - name: Upload artifact for deployment jobs
#         uses: actions/upload-artifact@v4
#         with:
#           name: python-app
#           path: release.zip
#           retention-days: 1

#   deploy:
#     runs-on: ubuntu-latest
#     needs: build
#     environment:
#       name: 'Production'
#       url: {{ steps.deploy-to-webapp.outputs.webapp-url }}

#     steps:
#       - name: Download artifact from build job
#         uses: actions/download-artifact@v4
#         with:
#           name: python-app

#       - name: Unzip artifact for deployment
#         run: |
#           unzip release.zip
#           rm release.zip

#       - name: Log in to Azure
#         uses: azure/login@v1
#         with:
#           creds: {{ secrets.AZURE_CREDENTIALS }}

#       - name: 'Deploy to Azure Web App'
#         uses: azure/webapps-deploy@v2
#         id: deploy-to-webapp
#         with:
#           app-name: 'investimate-backend'
#           slot-name: 'Production'
#           publish-profile: {{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
